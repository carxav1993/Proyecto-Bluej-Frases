#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\r\n\ M\u00E9todo\ principal\ del\ programa,\ mediante\ este\ se\ ejecuta\ el\ juego.\ Realiza\ la\ presentaci\u00F3n\ del\ juego\ y\ presenta\ el\ men\u00FA.\r\n
comment1.params=
comment1.target=void\ menu()
comment1.text=\r\n\ M\u00E9todo\ que\ presenta\ el\ men\u00FA\ del\ juego\ y\ toma\ como\ elecci\u00F3n\ de\ una\ opci\u00F3n\ del\ men\u00FA\ mediante\ el\ ingreso\ por\ teclado\ de\ un\ n\u00FAmero.\r\n\ @exception\ Se\ indica\ la\ excepci\u00F3n\ de\ que\ se\ ingrese\ un\ valor\ no\ n\u00FAmerico.\r\n\ @throws\ IOException\ para\ poder\ capturar\ el\ error\ de\ entrada/salida.\r\n
comment10.params=
comment10.target=char\ ingresoLetra()
comment10.text=\r\n\ M\u00E9todo\ para\ validar\ el\ ingreso\ de\ una\ sola\ letra\ por\ teclado,\ no\ cadenas\ de\ texto,\ no\ n\u00FAmero\ ni\ caracteres\ especiales.\r\n\ @return\ char\ Retorna\ la\ letra\ ingresada.\r\n
comment11.params=letrasFrase
comment11.target=double\ determinarPuntajePorLetra(char[])
comment11.text=\r\n\ M\u00E9todo\ que\ realiza\ el\ puntaje\ por\ letra\ que\ conforma\ la\ frase,\ la\ frase\ tendra\ 100\ puntos\ y\ dependiendo\ el\ n\u00FAmero\ de\ letras\ se\ obtendr\u00E1\ el\ valor\ por\ cada\ letra.\r\n\ @param\ letrasFrase\ Vector\ tipo\ char\ en\ donde\ se\ encuentran\ las\ letras\ de\ la\ frase.\r\n\ @return\ double\ Retorno\ del\ valor\ de\ la\ letra.\r\n
comment12.params=letrasFrase
comment12.target=char[]\ ocultarFrase(char[])
comment12.text=\r\n\ M\u00E9todo\ que\ ubica\ el\ s\u00EDmbolo\ "_"\ en\ las\ letras\ que\ conforman\ las\ frases.\r\n\ @param\ letrasFrase\ Vector\ en\ donde\ se\ encuentran\ las\ letras\ que\ conforman\ la\ frase.\r\n\ @return\ char[]\ Retorno\ de\ un\ nuevo\ vector\ con\ el\ s\u00EDmbolo\ "_"\ en\ cada\ letra\ que\ conforma\ la\ frase.\r\n
comment13.params=aleatorio
comment13.target=java.lang.String[][]\ obtenerFrasePista(int)
comment13.text=\r\n\ M\u00E9todo\ de\ donde\ se\ obtiene\ la\ frase\ con\ la\ pista\ de\ la\ misma.\r\n\ @param\ aleatorio\ N\u00FAmero\ aleatorio.\r\n\ @return\ String[][]\ Retorna\ una\ matriz\ de\ 1\ fila\ con\ una\ 2\ columnas.\r\n
comment14.params=numeroDeFrases
comment14.target=int[]\ detereminarNumerosDeFrases(int[])
comment14.text=\r\n\ M\u00E9todo\ para\ determinar\ los\ n\u00FAmeros\ aleatorios\ que\ se\ almacenar\u00E1n\ en\ el\ vector\ de\ 10\ posiciones.\r\n\ @param\ numeroDeFrases\ Vector\ en\ donde\ se\ almacenar\u00E1\ el\ n\u00FAmero\ aleatorio.\r\n\ @return\ int[]\ Retorno\ de\ un\ vector\ donde\ contendr\u00E1\ los\ n\u00FAmeros\ aleatorios.\r\n
comment15.params=p
comment15.target=java.lang.String\ datosPersona(java.lang.String)
comment15.text=\r\n\ M\u00E9todo\ que\ pide\ el\ ingreso\ por\ teclado\ de\ nombres\ y\ apellidos\ de\ la\ persona\ validando\ que\ sea\ \u00FAnicamente\ letras.\r\n\ @param\ p\ String\ en\ donde\ vendr\u00E1\ el\ texto\ a\ mostrar.\r\n\ @return\ String\ Retorna\ el\ dato\ que\ ser\u00E1\ el\ nombre\ o\ el\ apellido\ de\ la\ persona.\r\n
comment16.params=
comment16.target=void\ salir()
comment16.text=\r\n\ M\u00E9todo\ que\ permite\ salir\ del\ juego\ definitivamente.\r\n
comment17.params=msj
comment17.target=void\ mensaje(java.lang.String)
comment17.text=\r\n\ M\u00E9todo\ que\ muestra\ un\ mensaje.\r\n
comment18.params=letrasOcultas\ pista
comment18.target=void\ mensaje(char[],\ java.lang.String)
comment18.text=\r\n\ M\u00E9todo\ que\ presenta\ las\ oportunidades,\ la\ pista\ de\ la\ frase,\ las\ letras\ ocultas\ con\ el\ s\u00EDmbolo\ "_"\ a\ no\ ser\ de\ que\ se\ presente\ la\ letra\ adivinada.\r\n\ @param\ letrasOcultas[]\ Vector\ en\ donde\ ss\ encuentran\ los\ s\u00EDmbolos\ "_"\ a\ no\ ser\ de\ que\ se\ presente\ la\ letra\ adivinada.\r\n\ @param\ pista\ En\ esta\ se\ encuentra\ la\ pista\ de\ la\ frase.\r\n
comment19.params=
comment19.target=void\ presentarBienvenida()
comment19.text=\r\n\ M\u00E9todo\ en\ el\ que\ se\ presenta\ la\ bienvenida\ del\ programa.\r\n
comment2.params=
comment2.target=void\ instrucciones()
comment3.params=
comment3.target=void\ scorePuntuacion()
comment3.text=\r\n\ M\u00E9todo\ que\ sirve\ para\ presentar\ el\ score\ o\ puntuaci\u00F3n.\ Llama\ a\ leerArchivo\ para\ obtener\ las\ puntuaciones\ almacenadas\ en\ un\ archivo.\r\n
comment4.params=
comment4.target=java.lang.String\ leerArchivo()
comment4.text=\r\n\ M\u00E9todo\ para\ leer\ el\ archivo\ en\ el\ que\ se\ encuentran\ las\ puntuaciones\ obteniendolos\ del\ archivo\ en\ donde\ se\ encuentran\ y\ devolvi\u00E9ndolos\ en\ un\ String.\r\n\ @return\ datos\ Un\ String\ en\ el\ que\ estar\u00E1n\ concatenados\ las\ puntuaciones\ almacenadas.\r\n
comment5.params=
comment5.target=void\ jugar()
comment5.text=\r\n\ M\u00E9todo\ jugar,\ he\ aqu\u00ED\ en\ donde\ se\ inicia\ el\ juego\ de\ adivinar\ las\ frases\ obteniendo\ la\ informaci\u00F3n\ de\ la\ persona\ que\ va\ a\ jugar\ e\ inicializando\ las\ variables\ a\ utilizar.\r\n\ @throws\ Para\ tomar\ el\ error\ de\ entrada/salida.\r\n
comment6.params=nom\ ape
comment6.target=void\ almacenarDatos(java.lang.String,\ java.lang.String)
comment6.text=\r\n\ M\u00E9todo\ para\ escribir\ en\ el\ archivo\ los\ datos\ de\ la\ persona\ que\ ha\ jugado\ y\ la\ puntuaci\u00F3n\ final\ acumulada\ sobre\ 1000\ para\ guardarlo\ en\ el\ archivo.\r\n\ @param\ nom\ Nombres\ de\ la\ persona\r\n\ @param\ ape\ Apellidos\ de\ la\ persona\r\n
comment7.params=aleatorio\ i
comment7.target=void\ empezarJuego(int,\ int)
comment7.text=\r\n\ M\u00E9todo\ para\ iniciar\ el\ juego,\ inicializando\ las\ variables\ correspondientes,\ en\ \u00E9l\ se\ inicia\ la\ l\u00F3gica\ de\ cada\ frase\ comparando\ las\ letras\ ingresadas\ por\ el\ usuario\ y\ determinando\ el\ n\u00FAmero\ de\ oportunidades.\r\n\ @param\ aleatorio\ N\u00FAmero\ aleatorio\ obtenido\ del\ vector\ en\ donde\ se\ encuentra\ los\ 10\ n\u00FAmeros\ aleatorios.\r\n\ @param\ i\ N\u00FAmero\ entero\ que\ indica\ el\ n\u00FAmero\ de\ iteraci\u00F3n\ y\ de\ la\ frase\ actual\ de\ las\ 10\ en\ total.\r\n
comment8.params=fp
comment8.target=java.lang.String\ finalizarJuego(java.lang.String)
comment8.text=\r\n\ M\u00E9todo\ para\ mostar\ un\ mensaje\ de\ que\ si\ las\ oportunidades\ son\ diferentes\ de\ 0,\ felicita\ a\ la\ persona,\ caso\ contrario\ indica\ que\ no\ ha\ podido\ adivinar\ la\ frase.\r\n\ @param\ fp\ Frase\ a\ adivinar\r\n\ @return\ mensaje\ Es\ el\ mensaje\ que\ se\ le\ presentar\u00E1\ a\ la\ persona.\r\n
comment9.params=letra\ letrasFrase\ letrasOcultas\ puntuacionPorLetra
comment9.target=char[]\ verificacionLetra(char,\ char[],\ char[],\ double)
comment9.text=\r\n\ M\u00E9todo\ para\ verificar\ la\ letra\ ingresada,\ si\ se\ repite\ a\ letras\ ingresadas\ anteriormente,\ cambio\ del\ sigo\ _\ por\ la\ letra\ en\ caso\ de\ que\ si\ exista\ en\ la\ frase.\r\n\ @param\ letra\ Letra\ ingresada\ por\ teclado.\r\n\ @param\ letrasFrase\ Se\ encuentra\ la\ frase\ separada\ por\ letra\ en\ este\ vector\ tipo\ caracter.\r\n\ @param\ letrasOcultas\ Se\ encuentra\ el\ signo\ _\ en\ cada\ posici\u00F3n\ del\ vector,\ salvo\ que\ ya\ se\ haya\ adivinado\ una\ letra\ por\ lo\ que\ estara\ reemplazo\ la\ letra\ por\ el\ signo\ _.\r\n\ @param\ puntuacionPorLetra\ Es\ un\ acumulador\ de\ puntaje\ por\ frase\ en\ donde\ suma\ las\ letras\ adivinadas.\r\n\ @return\ char[]\ Retorna\ el\ vector\ LetrasOcultas\ con\ el\ cambio\ de\ _\ a\ la\ letra\ adivinada,\ sino\ fuera\ el\ casi\ me\ mantiene\ el\ signo\ _.\r\n
numComments=20
